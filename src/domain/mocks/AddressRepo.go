// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// AddressRepo is an autogenerated mock type for the AddressRepo type
type AddressRepo struct {
	mock.Mock
}

// Exist provides a mock function with given fields: address
func (_m *AddressRepo) Exist(address string) bool {
	ret := _m.Called(address)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(address)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Save provides a mock function with given fields: address
func (_m *AddressRepo) Save(address string) error {
	ret := _m.Called(address)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(address)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewAddressRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewAddressRepo creates a new instance of AddressRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAddressRepo(t mockConstructorTestingTNewAddressRepo) *AddressRepo {
	mock := &AddressRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
